g = 5 ^ 2;
========================================================================
(module
  (type (;0;) (func (param f64) (result f64)))
  (type (;1;) (func (param f64 f64) (result f64)))
  (type (;2;) (func))
  (import "shims" "sin" (func (;0;) (type 0)))
  (import "shims" "pow" (func (;1;) (type 1)))
  (import "shims" "cos" (func (;2;) (type 0)))
  (import "shims" "tan" (func (;3;) (type 0)))
  (import "shims" "asin" (func (;4;) (type 0)))
  (import "shims" "acos" (func (;5;) (type 0)))
  (import "shims" "atan" (func (;6;) (type 0)))
  (import "shims" "atan2" (func (;7;) (type 1)))
  (import "shims" "log" (func (;8;) (type 0)))
  (import "shims" "log10" (func (;9;) (type 0)))
  (import "shims" "sigmoid" (func (;10;) (type 1)))
  (import "shims" "exp" (func (;11;) (type 0)))
  (func (;12;) (type 2)
    f64.const 0x1.4p+2 (;=5;)
    f64.const 0x1p+1 (;=2;)
    call 1
    global.set 0
    global.get 0
    drop)
  (memory (;0;) 2048 2048)
  (global (;0;) (mut f64) (f64.const 0x0p+0 (;=0;)))
  (export "test" (func 12)))
